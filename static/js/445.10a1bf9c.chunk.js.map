{"version":3,"file":"static/js/445.10a1bf9c.chunk.js","mappings":"oNACA,EAAuB,yBAAvB,EAA+D,iCAA/D,EAA6G,+B,SCI9F,SAASA,IACtB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEIC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MAIPC,EAAG,mGAA+FR,GAYlGS,EAAe,mCAAG,+GAEGC,MAAMF,GAFT,cAEdG,EAFc,gBAGDA,EAASC,OAHR,OAGdC,EAHc,OAIpBV,EAAUU,EAAKC,SAJK,kDAMpBC,MAAM,gDANc,0DAAH,qDAWrB,OACE,4BACIT,EAAOU,UACP,4BACE,gBAAKC,UAAWC,EAAhB,UACE,6BACE,kBAAMC,SAvBG,SAAAC,GACnBA,EAAEC,iBACFZ,EAAgBW,EAAEE,OAAOC,SAASvB,YAAYwB,OAC9CvB,EAAeD,IAoBL,WACE,kBACEyB,SA7BK,SAAAL,GACnBnB,EAAemB,EAAEM,cAAcF,MAAMG,gBA6BvBH,MAAOxB,EACP4B,KAAK,cACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAEd,mBAAQH,KAAK,SAAb,UACE,+CAMR,0BACE,wBACG3B,EAAO+B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAArB,UACE,wBAAcC,GAALD,IADqBA,aAQzC5B,EAAOU,UACN,4BACE,mBACEC,UAAWC,EACXmB,QAAS,WACPjC,GAAU,IAHd,UAME,iBAAMa,UAAWC,EAAjB,yBAEF,SAAC,KAAD","sources":["webpack://movies/./src/components/MoviesPage/MoviesPage.module.css?564c","components/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"MoviesPage_Form__gQCFp\",\"ReturnButton\":\"MoviesPage_ReturnButton__xvV1d\",\"ButtonText\":\"MoviesPage_ButtonText__wYT0e\"};","import { Link, Outlet, useNavigate, useParams } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport styles from './MoviesPage.module.css';\n\n\nexport default function MoviePage() {\n  const [searchValue, setSearchValue] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  let navigate = useNavigate();\n  let params = useParams();\n\n \n\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=7d4759b38fdb93bbea25cb13d285324c&query=${searchValue}`;\n\n  const handleChange = e => {\n    setSearchValue(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    getMovieRequest(e.target.elements.searchValue.value);\n    setSearchValue(searchValue);\n  };\n\n  const getMovieRequest = async () => {\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setMovies(data.results);\n    } catch (error) {\n      alert(\"Wprowadź szukaną wartość\");\n      \n    }\n  };\n\n  return (\n    <div>\n      {!params.movieId && (\n        <div>\n          <div className={styles.Form}>\n            <header>\n              <form onSubmit={handleSubmit}>\n                <input\n                  onChange={handleChange}\n                  value={searchValue}\n                  name=\"searchValue\"\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  autoFocus\n                  placeholder=\"Search movie\"\n                />\n                <button type=\"submit\">\n                  <span>Search</span>\n                </button>\n              </form>\n            </header>\n          </div>\n\n          <div>\n            <ul>\n              {movies.map(({ id, title }) => (\n                <Link to={`/movies/${id}`} key={id}>\n                  <li key={id}>{title}</li>\n                </Link>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      {params.movieId && (\n        <div>\n          <button\n            className={styles.ReturnButton}\n            onClick={() => {\n              navigate(-1);\n            }}\n          >\n            <span className={styles.ButtonText}> Go back</span>\n          </button>\n          <Outlet />\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["MoviePage","useState","searchValue","setSearchValue","movies","setMovies","navigate","useNavigate","params","useParams","url","getMovieRequest","fetch","response","json","data","results","alert","movieId","className","styles","onSubmit","e","preventDefault","target","elements","value","onChange","currentTarget","toLowerCase","name","type","autoComplete","autoFocus","placeholder","map","id","title","to","onClick"],"sourceRoot":""}